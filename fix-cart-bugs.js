#!/usr/bin/env node

/**
 * Script para aplicar corre√ß√µes do sistema de carrinho
 * Execute: node fix-cart-bugs.js
 */

const fs = require('fs');
const path = require('path');

console.log('üîß Iniciando corre√ß√µes do sistema de carrinho...\n');

// Backup do arquivo original
const originalPath = './src/hooks/useCart.js';
const fixedPath = './src/hooks/useCart-fixed.js';
const backupPath = './src/hooks/useCart-backup.js';

try {
  // 1. Fazer backup do arquivo original
  if (fs.existsSync(originalPath)) {
    fs.copyFileSync(originalPath, backupPath);
    console.log('‚úÖ Backup criado: useCart-backup.js');
  }

  // 2. Substituir pelo arquivo corrigido
  if (fs.existsSync(fixedPath)) {
    fs.copyFileSync(fixedPath, originalPath);
    console.log('‚úÖ Arquivo corrigido aplicado: useCart.js');
  } else {
    console.error('‚ùå Arquivo corrigido n√£o encontrado: useCart-fixed.js');
    process.exit(1);
  }

  // 3. Verificar imports do CartContext
  const cartContextPath = './src/contexts/CartContext.js';
  if (fs.existsSync(cartContextPath)) {
    const content = fs.readFileSync(cartContextPath, 'utf8');
    if (content.includes("from '../hooks/useCart'")) {
      console.log('‚úÖ Import do useCart no CartContext est√° correto');
    } else {
      console.log('‚ö†Ô∏è  Verificar import do useCart no CartContext.js');
    }
  }

  // 4. Verificar se a p√°gina cart.js est√° usando o contexto corretamente
  const cartPagePath = './pages/cart.js';
  if (fs.existsSync(cartPagePath)) {
    const content = fs.readFileSync(cartPagePath, 'utf8');
    if (content.includes('useCartContext')) {
      console.log('‚úÖ P√°gina cart.js est√° usando o contexto corretamente');
    } else {
      console.log('‚ö†Ô∏è  Verificar se cart.js est√° usando useCartContext');
    }
  }

  console.log('\nüéâ Corre√ß√µes aplicadas com sucesso!');
  console.log('\nüìã Pr√≥ximos passos:');
  console.log('1. Reiniciar o servidor de desenvolvimento');
  console.log('2. Testar adi√ß√£o de produtos ao carrinho');
  console.log('3. Testar atualiza√ß√£o de quantidades');
  console.log('4. Testar remo√ß√£o de itens');
  console.log('5. Verificar sincroniza√ß√£o do carrinho');
  
  console.log('\nüîç Para reverter as mudan√ßas:');
  console.log('cp src/hooks/useCart-backup.js src/hooks/useCart.js');

} catch (error) {
  console.error('‚ùå Erro ao aplicar corre√ß√µes:', error.message);
  process.exit(1);
}
