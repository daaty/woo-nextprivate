// Teste simples do Infinitepay - apenas URL b√°sica
const https = require('https');

// Configura√ß√£o
const INFINITEPAY_HANDLE = 'rotadoscelulares';
const INFINITEPAY_BASE_URL = 'https://checkout.infinitepay.io';

console.log('üöÄ Testando Infinitepay - Vers√£o Simples...');
console.log('üìç Handle configurado:', INFINITEPAY_HANDLE);

// Teste 1: URL b√°sica sem par√¢metros
const basicUrl = `${INFINITEPAY_BASE_URL}/${INFINITEPAY_HANDLE}`;
console.log('\nüîó TESTE 1 - URL B√°sica:');
console.log('URL:', basicUrl);

// Teste 2: URL com par√¢metros m√≠nimos
const items = [
    {
        name: 'Produto Teste',
        amount: 10000 // R$ 100,00 em centavos
    }
];

const params = new URLSearchParams();
params.append('items', JSON.stringify(items));
params.append('order_nsu', `teste_${Date.now()}`);
params.append('redirect_url', 'https://rota.rotadoscelulares.com/confirmacao/infinitepay');

const minimalUrl = `${basicUrl}?${params.toString()}`;
console.log('\nüîó TESTE 2 - URL com Par√¢metros M√≠nimos:');
console.log('URL:', minimalUrl);

// Teste 3: Verificar se as URLs s√£o acess√≠veis
function testUrl(url, label) {
    return new Promise((resolve) => {
        console.log(`\nüîç ${label}:`);
        console.log('URL:', url);
        
        const request = https.get(url, { timeout: 10000 }, (response) => {
            console.log(`Status: ${response.statusCode}`);
            
            if (response.statusCode === 200) {
                console.log('‚úÖ SUCESSO! URL est√° funcionando');
            } else if (response.statusCode === 404) {
                console.log('‚ùå ERRO 404: P√°gina n√£o encontrada');
            } else {
                console.log(`‚ö†Ô∏è  Status: ${response.statusCode}`);
            }
            resolve();
        });
        
        request.on('error', (error) => {
            console.log('‚ùå ERRO:', error.message);
            resolve();
        });
        
        request.on('timeout', () => {
            console.log('‚è±Ô∏è  TIMEOUT: Resposta demorou muito');
            request.destroy();
            resolve();
        });
    });
}

async function runTests() {
    await testUrl(basicUrl, 'Testando URL B√°sica');
    await testUrl(minimalUrl, 'Testando URL com Par√¢metros');
    
    console.log('\nüìä RESUMO DOS TESTES:');
    console.log('=====================================');
    console.log('1. Se URL b√°sica funcionou: Conta est√° configurada corretamente');
    console.log('2. Se URL b√°sica falhou: Problema na configura√ß√£o da conta');
    console.log('3. Se ambas falharam: Handle n√£o existe ou conta n√£o ativa');
    
    console.log('\nüí° PR√ìXIMOS PASSOS:');
    console.log('1. Copie e teste as URLs acima no navegador');
    console.log('2. Se n√£o funcionar, verifique na Infinitepay:');
    console.log('   - Se o handle est√° correto');
    console.log('   - Se a conta est√° ativa');
    console.log('   - Se h√° configura√ß√µes pendentes');
}

runTests().catch(console.error);
